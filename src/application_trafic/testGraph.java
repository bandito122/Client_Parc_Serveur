/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package application_trafic;

import java.awt.BorderLayout;
import java.awt.GridLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author bobmastrolilli
 */
public final class testGraph extends javax.swing.JFrame {

    /**
     * Creates new form testGraph
     */
    ChartPanel cp;
    JFreeChart jfc;
    public testGraph() throws InterruptedException {
        initComponents();
        
        this.getContentPane().setLayout(new BorderLayout());
        initt();
        Thread.sleep(5000); 
        showHistogram();
        Thread.sleep(5000); 
        
        
    }
    public void initt()
    {
        this.setLayout(new BorderLayout());
        cp =  new ChartPanel(jfc);
    }
    public void removeJFC()
    {
        this.remove(cp);
        this.revalidate();
        this.repaint();

    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(testGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(testGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(testGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(testGraph.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new testGraph().setVisible(true);
                } catch (InterruptedException ex) {
                    Logger.getLogger(testGraph.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
private void showHistogram()
    {
        String mois = "Janvier";
        String nomSociete;
        String destination;
        
        double mouvements = 20;
        DefaultCategoryDataset ds = new DefaultCategoryDataset();
        ds.addValue(mouvements, mois, mois);
        
        jfc = ChartFactory.createAreaChart("Graphique des mouvements", "Mois", "Nb Mouvements", ds, PlotOrientation.VERTICAL, true, true, false);
        //this.jPanel5.setLayout(new java.awt.BorderLayout());
        cp = new ChartPanel(jfc);
        this.getContentPane().add(cp);
        //this.jPanel5.add(cp, BorderLayout.CENTER);
        //this.jPanel5.validate();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
